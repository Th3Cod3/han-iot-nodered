[
    {
        "id": "9eb2bb2f23cb3479",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "07c5521542a8e3a9",
        "type": "mqtt-broker",
        "name": "TTN HAN IOT",
        "broker": "eu1.cloud.thethings.network",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": "",
        "info": "NNSXS.NALBTOCUGHULGNQMSR3UCILOAFJNYZMN46O7UPA.IDUOKZZOJ3CNXXBYONF6S5RW35WMQOK5F3R7XWPZAB3QXLZIPAVQ"
    },
    {
        "id": "d835550709e60d14",
        "type": "MySQLdatabase",
        "name": "hive_db",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "hive_db",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "ff7b6b4021e042ce",
        "type": "ui_tab",
        "name": "Status",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0eb6b8e2053703cb",
        "type": "ui_group",
        "name": "Status page",
        "tab": "ff7b6b4021e042ce",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8066acdf4dea3c72",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7e4eeb9b87d47b8f",
        "type": "ui_group",
        "name": "Default",
        "tab": "8066acdf4dea3c72",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d80258456b0b2cb2",
        "type": "mqtt in",
        "z": "9eb2bb2f23cb3479",
        "name": "up",
        "topic": "v3/+/devices/+/up",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "07c5521542a8e3a9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 100,
        "wires": [
            [
                "b3be766cadc4cb3d"
            ]
        ]
    },
    {
        "id": "c1789bc6bcb64247",
        "type": "mysql",
        "z": "9eb2bb2f23cb3479",
        "mydb": "d835550709e60d14",
        "name": "hive_db",
        "x": 700,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "b3be766cadc4cb3d",
        "type": "function",
        "z": "9eb2bb2f23cb3479",
        "name": "prepare insert query",
        "func": "const { \n    orientationY: orientation_y,\n    orientationX: orientation_x,\n    weight,\n    activity\n} = msg.payload.uplink_message.decoded_payload;\n\nmsg.payload = {\n    dev_eui: msg.payload.end_device_ids.dev_eui,\n    orientation_y,\n    orientation_x,\n    weight,\n    activity,\n    received_at: new Date(msg.payload.received_at),\n}\n\nmsg.topic = [\n    \"INSERT INTO hive_payloads\",\n    \"(`dev_eui`, `orientation_y`, `orientation_x`, `weight`, `activity`, `received_at`)\",\n    \"VALUES\",\n    \"(:dev_eui, :orientation_y, :orientation_x, :weight, :activity, :received_at);\",\n].join(' ');\n\nmsg.id = 'ttn-up';\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 100,
        "wires": [
            [
                "c1789bc6bcb64247"
            ]
        ]
    },
    {
        "id": "e0a48c9fbe7a8dac",
        "type": "inject",
        "z": "9eb2bb2f23cb3479",
        "name": "Test MQTT up",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"end_device_ids\":{\"device_id\":\"han-device\",\"application_ids\":{\"application_id\":\"test-app-th3-cod3\"},\"dev_eui\":\"70B3D57ED006B0D7\",\"join_eui\":\"0004A30B001FCC24\",\"dev_addr\":\"260B2833\"},\"correlation_ids\":[\"gs:uplink:01JGVX1Z6X6GC77RDPQTJWN7B1\"],\"received_at\":\"2025-01-05T18:53:50.890713730Z\",\"uplink_message\":{\"session_key_id\":\"AZQ3wxNiBeqT38pZtsoASA==\",\"f_port\":1,\"f_cnt\":1,\"frm_payload\":\"CeQAEFlW\",\"decoded_payload\":{\"activity\":25,\"checksum\":86,\"orientationX\":0,\"orientationY\":121,\"payloadId\":1,\"weight\":13},\"rx_metadata\":[{\"gateway_ids\":{\"gateway_id\":\"han-ese-ttig-19\",\"eui\":\"58A0CBFFFE80221E\"},\"time\":\"2025-01-05T18:53:50.542771100Z\",\"timestamp\":2865301308,\"rssi\":-49,\"channel_rssi\":-49,\"snr\":9.25,\"uplink_token\":\"Ch0KGwoPaGFuLWVzZS10dGlnLTE5EghYoMv//oAiHhC8jqTWChoMCL6q67sGEKr96sYCIOCEkYqyoBE=\",\"received_at\":\"2025-01-05T18:53:50.639478520Z\"}],\"settings\":{\"data_rate\":{\"lora\":{\"bandwidth\":125000,\"spreading_factor\":7,\"coding_rate\":\"4/5\"}},\"frequency\":\"867900000\",\"timestamp\":2865301308,\"time\":\"2025-01-05T18:53:50.542771100Z\"},\"received_at\":\"2025-01-05T18:53:50.686505463Z\",\"consumed_airtime\":\"0.051456s\",\"network_ids\":{\"net_id\":\"000013\",\"ns_id\":\"EC656E0000000181\",\"tenant_id\":\"ttn\",\"cluster_id\":\"eu1\",\"cluster_address\":\"eu1.cloud.thethings.network\"}}}",
        "payloadType": "json",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "b3be766cadc4cb3d"
            ]
        ]
    },
    {
        "id": "78704572ba92683f",
        "type": "http response",
        "z": "9eb2bb2f23cb3479",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1540,
        "y": 540,
        "wires": []
    },
    {
        "id": "1ea45368694a31a5",
        "type": "template",
        "z": "9eb2bb2f23cb3479",
        "name": "Device page",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <link\n      href=\"https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.css\"\n      rel=\"stylesheet\"\n    />\n    <script\n      src=\"https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.js\"\n    ></script>\n  </head>\n\n  <body>\n    <div class=\"container mx-auto p-4\">\n      <h1 class=\"text-2xl font-bold text-gray-800 dark:text-white\">\n        Device {{ device.dev_eui }}\n      </h1>\n\n      <div class=\"relative overflow-x-auto\">\n        <h2>\n          Last data from device at: {{ device.received_at }}\n        </h2>\n        <div class=\"p-4 bg-white rounded-lg md:p-8 dark:bg-gray-800\" id=\"stats\" role=\"tabpanel\" aria-labelledby=\"stats-tab\">\n            <dl class=\"grid max-w-screen-xl grid-cols-2 gap-8 p-4 mx-auto text-gray-900 sm:grid-cols-3 xl:grid-cols-6 dark:text-white sm:p-8\">\n                <div class=\"flex flex-col items-center justify-center\">\n                    <dt class=\"mb-2 text-3xl font-extrabold\">{{ device.orientation_y }}</dt>\n                    <dd class=\"text-gray-500 dark:text-gray-400\">Orientation Y</dd>\n                </div>\n                <div class=\"flex flex-col items-center justify-center\">\n                    <dt class=\"mb-2 text-3xl font-extrabold\">{{ device.orientation_x }}</dt>\n                    <dd class=\"text-gray-500 dark:text-gray-400\">Orientation X</dd>\n                </div>\n                <div class=\"flex flex-col items-center justify-center\">\n                    <dt class=\"mb-2 text-3xl font-extrabold\">{{ device.weight }} kg</dt>\n                    <dd class=\"text-gray-500 dark:text-gray-400\">Weight</dd>\n                </div>\n                <div class=\"flex flex-col items-center justify-center\">\n                    <dt class=\"mb-2 text-3xl font-extrabold\">{{ device.activity }}</dt>\n                    <dd class=\"text-gray-500 dark:text-gray-400\">Activity</dd>\n                </div>\n            </dl>\n        </div>\n      </div>\n    </div>\n  </body>\n</html>",
        "output": "str",
        "x": 1310,
        "y": 640,
        "wires": [
            [
                "78704572ba92683f"
            ]
        ]
    },
    {
        "id": "e44e92022a62df01",
        "type": "http in",
        "z": "9eb2bb2f23cb3479",
        "name": "",
        "url": "/devices/:device",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 600,
        "wires": [
            [
                "e01c8de9c92fb49c"
            ]
        ]
    },
    {
        "id": "f9e8915d9e4ef820",
        "type": "function",
        "z": "9eb2bb2f23cb3479",
        "name": "Get last payload each device",
        "func": "msg.topic = \"SELECT * FROM `hive_payloads` GROUP BY `dev_eui` ORDER BY `received_at` DESC\";\nmsg.id = 'last-payload-each-device';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 540,
        "wires": [
            [
                "abfc49e702954b9d"
            ]
        ]
    },
    {
        "id": "abfc49e702954b9d",
        "type": "mysql",
        "z": "9eb2bb2f23cb3479",
        "mydb": "d835550709e60d14",
        "name": "hive_db",
        "x": 660,
        "y": 540,
        "wires": [
            [
                "0640f335f9490d05"
            ]
        ]
    },
    {
        "id": "8dedda2d39683f9c",
        "type": "http in",
        "z": "9eb2bb2f23cb3479",
        "name": "",
        "url": "/devices",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 540,
        "wires": [
            [
                "f9e8915d9e4ef820"
            ]
        ]
    },
    {
        "id": "6b77450624591411",
        "type": "template",
        "z": "9eb2bb2f23cb3479",
        "name": "Device table",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <link\n      href=\"https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.css\"\n      rel=\"stylesheet\"\n    />\n    <script\n      src=\"https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.js\"\n    ></script>\n  </head>\n\n  <body>\n    <div class=\"container mx-auto p-4\">\n      <h1 class=\"text-2xl font-bold text-gray-800 dark:text-white\">\n        Devices\n      </h1>\n\n      <div class=\"relative overflow-x-auto\">\n        <table\n          class=\"w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400\"\n        >\n          <thead\n            class=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\"\n          >\n            <tr>\n              <th scope=\"col\" class=\"px-6 py-3\">Device Eui</th>\n              <th scope=\"col\" class=\"px-6 py-3 text-right\">Last payload</th>\n            </tr>\n          </thead>\n          <tbody>\n            {{#devices}}\n              <tr class=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\">\n                <th\n                  scope=\"row\"\n                  class=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\n                >\n                  <a href=\"/devices/{{dev_eui}}\">\n                    {{dev_eui}}\n                  </a>\n                </th>\n                <td class=\"px-6 py-4 text-right\">{{received_at}}</td>\n              </tr>\n            {{/devices}}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </body>\n\n</html>",
        "output": "str",
        "x": 1070,
        "y": 540,
        "wires": [
            [
                "78704572ba92683f"
            ]
        ]
    },
    {
        "id": "0640f335f9490d05",
        "type": "function",
        "z": "9eb2bb2f23cb3479",
        "name": "format payload",
        "func": "const formatDate = (date) => {\n    const d = new Date(date);\n    return d.toLocaleString();\n}\n\nconst getFormatedDevice = ({dev_eui, received_at}) => {\n    return {\n        dev_eui,\n        received_at: formatDate(received_at)\n    }\n};\n\nmsg.devices = msg.payload?.map(getFormatedDevice);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 540,
        "wires": [
            [
                "6b77450624591411"
            ]
        ]
    },
    {
        "id": "e01c8de9c92fb49c",
        "type": "function",
        "z": "9eb2bb2f23cb3479",
        "name": "Get last device entry",
        "func": "msg.topic = \"SELECT * FROM `hive_payloads` WHERE `dev_eui` = :dev_eui ORDER BY `received_at` DESC\";\n\nmsg.payload = {\n    dev_eui: msg.req.params.device\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 700,
        "wires": [
            [
                "a13de40eac2ac15b"
            ]
        ]
    },
    {
        "id": "a13de40eac2ac15b",
        "type": "mysql",
        "z": "9eb2bb2f23cb3479",
        "mydb": "d835550709e60d14",
        "name": "hive_db",
        "x": 720,
        "y": 700,
        "wires": [
            [
                "0ba5a7af86135ce3"
            ]
        ]
    },
    {
        "id": "0ba5a7af86135ce3",
        "type": "function",
        "z": "9eb2bb2f23cb3479",
        "name": "format payload",
        "func": "const formatDate = (date) => {\n    const d = new Date(date);\n    return d.toLocaleString();\n}\n\nconst getFormatedDevice = (device) => {\n    return {\n        ...device,\n        received_at: formatDate(device.received_at)\n    }\n};\n\nmsg.device =  msg.payload.length\n    ? getFormatedDevice(msg.payload[0])\n    : null;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 700,
        "wires": [
            [
                "38cf3219b946abd4"
            ]
        ]
    },
    {
        "id": "38cf3219b946abd4",
        "type": "switch",
        "z": "9eb2bb2f23cb3479",
        "name": "",
        "property": "device",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 700,
        "wires": [
            [
                "1ea45368694a31a5"
            ],
            [
                "527d601cd8523ede"
            ]
        ]
    },
    {
        "id": "d9f5b0e4f0579792",
        "type": "http response",
        "z": "9eb2bb2f23cb3479",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 1580,
        "y": 780,
        "wires": []
    },
    {
        "id": "527d601cd8523ede",
        "type": "template",
        "z": "9eb2bb2f23cb3479",
        "name": "Not found page",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Not found <a href=\"/devices\">go back to devices</a>",
        "output": "str",
        "x": 1380,
        "y": 780,
        "wires": [
            [
                "d9f5b0e4f0579792"
            ]
        ]
    }
]